
Could use if format doesn't show up in initial results:
secondaries = [x for x in soup.find_all('div') if 'class' in x.attrs and 'secondary_info' in x['class']]
formats = [x for x in spans if 'class' in x.attrs and 'format' in x['class']]

Rewrite data_manager function: just track call numbers, i.e. already updated ones, then leave updated ones alone unless updating to say it's available

Might as well make lots of AJAX calls so results are showing up right away

Server-side session: keeps session on server side
Flask extension with session.  Still using session object, uses database, but API is via session

Could do single-page application so data persists in browser
Or use cacheing tool?
Henry thinks head start problem is good idea, tricky

Work on AJAX calls on next page, then come back to this preloading issue.  Interesting problem to discuss and show off.

Goodreads OAuth: rather sparse documentation, I can't even find the Ruby example mentioned on the forum.  But here's a Python example on Github: https://gist.github.com/gpiancastelli/537923

And in the comments, another one:
https://gist.github.com/steve-kertes/5862716

Need to read OAuth documentation to figure out what's going on here.  Do I need to set callback to localhost:5000 for now?

May want to look into python goodreads wrapper at https://github.com/sefakilic/goodreads


Code reviews and things to do: 
check for things like Main Library (2) decide how to handle the (2) for database.

Timing issue!

Separate AJAX route for map data only
Put in initMap,
put actual map stuff into success function.
JS can get width & height
set map depending on that.

initMap has to be on the page, but can wait for the rest to load?
Have a document.ready inside of it

See if can do Googlemaps without callback???  Check demo package.

Learn more (heavy reading) about promises: https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html